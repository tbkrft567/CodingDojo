Create initial package.json File
   - npm init -y

Express.JS installation:
   - npm install express --save
   - npm i express

(EJS) Embedded JavaScript:
   - npm install ejs
   - npm i ejs

Express EJS Mongoose
   - npm i express ejs mongoose

Express-Session:
   - npm i express-session
   
   server.js --
   const session = require('express-session')
   app.use(session({
      secret: 'keyboardkitteh',
      resave: false,
      saveUninitialized: true,
      cookie: { maxAge: 60000 }
   }))

create server.js File
      const express = require('express')
      const app = express()
      const session = require('express-session');
      const mongoose = require('mongoose') //Mongo Database

      mongoose.connect('mongodb://localhost/name_of_your_DB', { useNewUrlParser: true });
      const UserSchema = new mongoose.Schema(
         {
            name: String,
            age: Number
         })
      // create an object that contains methods for mongoose to interface with MongoDB
      const User = mongoose.model('User', UserSchema);

      app.set('view engine', 'ejs');
      app.set('views', __dirname + '/views');

      app.use(express.urlencoded({extended: true})) //Use POST Data
      app.use(express.static(__dirname + '/static')) //Use STATIC file
      app.use(session({
         secret: 'keyboardkitteh',
         resave: false, 
         saveUninitialized: true,
         cookie: { maxAge: 60000 }
      }))

      //.....Enter app.get routes HERE

      app.listen(8000, () => console.log("listening on port 8000"));

CatchAll Route:
   app.get('/*', (req, res) =>{
      res.render("index")
   })

[[**************************]]
Run Project (navigate): {these can only handle back-end js operations}
   - nodemon [fileName].js
   - node [fileName].js

CRUD 

Create [new]
Read [show, index]
Update [edit]
Destroy

/eels/index [get]
/eels/show [get]
/eels/new [get]
/eels/create [post]
/eels/edit [get]
/eels/update [post]
/eels/destroy [post]