// https://www.npmjs.com/package/mongoose-unique-validator


Creating Back-End with AngularFront:

Create initial package.json File
   - npm init -y

Express EJS Mongoose
   - npm i express mongoose

For MongoDb Seeding
   https://github.com/pkosiec/mongo-seeding/tree/master/cli
   npm install [-g] mongo-seeding-cli

**[FOR LOGIN]**
   - npm i jsonwebtoken
   - npm i bcrypt
   - npm i express-session
**[FOR LOGIN]**

create server.js File
console.log('***SERVER***')
      const express = require('express')
      const app = express()
      //const session = require('express-session'); //[FOR LOGIN]
      const mongoose = require('./server/config/mongoose.js')

      app.use(express.json()); //Change Node server into an API that server JSON data (makes postData available in JSON-form)
      app.use(express.static(__dirname + '/public/dist/public')) //Use STATIC file
      //app.use('trust proxy', 1) //[FOR LOGIN]
      //app.use(session({
      //   secret: 'keyboardkitteh',
      //   resave: false, 
      //   saveUninitialized: true,
      //   cookie: { maxAge: 60000 }
      //}))

      const Task = require('./server/config/routes.js')(app) //CREATE ROUTE FILE

      app.listen(8000, () => console.log("listening on port 8000"));

build folder structure for modularization:
   - server
      -config
         -mongoose.js
         -routes.js
      -controllers
         -users.js
      -model
         -user.js

modularization:
   -mongoose.js*****
         console.log('****MONGOOSE****')
         const mongoose = require('mongoose')
         mongoose.connect('mongodb://localhost/Users', { useNewUrlParser: true });
   -routes.js*****
         console.log('****ROUTES****')
         const users = require('../controllers/Users.js')
         const path = require('path')
         module.exports = function(app){
            app.get('/app/users', (req, res) => {
               users.index(req, res)
            })
            app.all("*", (req,res,next) => { 
               res.sendFile(path.resolve("./public/dist/public/index.html")) 
            })
         }
      -provide CatchAll to Routes.js wwith require('path'): app.all("*", (req,res,next) => { res.sendFile(path.resolve("./public/dist/public/index.html")) });

   -users.js*****
         console.log('****CONTROLLERS****')
         //var bcrypt = require('bcrypt') //[FOR LOGIN]
         var User = require('../model/user.js')
         module.exports = {
            index: (req, res) => {
               //index - all Users
               User.find()
                  .then(allUsers => {
                     res.json({users: allUsers})
                  })
                  .catch(err => { res.json(err) })
            },
         }
   -user.js*****
         console.log('****MODELS****')
         var mongoose = require('mongoose')
         //var uniqueValidator = require('mongoose-unique-validator')
         const UserSchema = new mongoose.Schema(
            {
               name: String
            })
         //UserSchema.plugin(uniqueValidator, { message: "This item must be UNIQUE*/*/*/*/*/" })
         const User = mongoose.model('User', UserSchema);
         module.exports = User

activate back-end file:
   -nodemon server.js

=================================================================================================
=================================================================================================
=================================================================================================
=================================================================================================